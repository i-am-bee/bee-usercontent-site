@use 'sass:math';

@use 'common' as *;

@use '@carbon/styles/scss/layer';
@use '@carbon/styles/scss/layout';
@use '@carbon/styles/scss/zone';

@use '@carbon/react/scss/components/notification/tokens' as *;
@use '@carbon/react/scss/components/button/tokens' as *;
@use '@carbon/react/scss/components/tag/tokens' as *;

.Toastify {
  display: none;
}

@mixin focus() {
  outline: none;
  box-shadow:
    0 0 0 2px $text-inverse,
    0 0 0 4px $focus;
}

#root {
  .stApp {
    @include font-family(sans);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    background-color: $layer-02;
    color: $text-primary;
    font-size: rem(16px);
    line-height: 1;
    scrollbar-width: thin;
    scrollbar-color: $border-subtle transparent;

    &,
    .#{$prefix}--white & {
      color-scheme: light;
    }
    .#{$prefix}--g90 & {
      color-scheme: dark;
    }

    * {
      @include font-family(sans);
    }

    a {
      color: $link-primary;
      text-decoration: none;
      &:hover {
        text-decoration: underline;
      }
    }

    button {
      &:focus {
        @include focus();
      }
    }

    .stAppHeader,
    .stAppToolbar {
      display: none;
    }

    .stAppViewContainer {
      padding: $spacing-03;
      body:not(.fullscreen) & {
        align-items: center;
      }
    }

    .stMain {
      padding: $spacing-06;
      background-color: $background;
      box-shadow: $box-shadow;
      border-radius: $spacing-03;
      overflow-x: hidden;
      max-inline-size: 100%;
      max-block-size: 100%;
      @media (max-width: 768px) {
        inset: $spacing-03;
        inline-size: auto;
      }
    }

    .stMainBlockContainer {
      padding: 0;
      max-inline-size: none;
    }

    .stHeading,
    .stMarkdown {
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        padding: 0;
        scroll-margin-block-start: $spacing-06;
        color: inherit;
      }
      span {
        scroll-margin-block-start: $spacing-06;
      }

      h1 {
        font-size: rem(24px);
        line-height: math.div(28, 24);
        font-weight: 600;
        margin-block-end: $spacing-07;
      }
      h2 {
        font-size: rem(20px);
        line-height: math.div(28, 20);
        font-weight: 600;
        margin-block-end: $spacing-06;
      }
      h3 {
        font-size: rem(18px);
        line-height: math.div(24, 18);
        font-weight: 600;
        margin-block-end: $spacing-04;
      }
    }

    .stMarkdown {
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        margin-block-end: $spacing-06;
      }
      h1 {
        @include type-style(heading-06);
      }
      h2 {
        @include type-style(heading-05);
      }
      h3 {
        @include type-style(heading-04);
      }
      h4 {
        @include type-style(heading-03);
      }
      h5 {
        @include type-style(heading-02);
      }
      h6 {
        @include type-style(heading-01);
      }

      ul,
      ol,
      dl,
      p {
        font-size: rem(14px);
        line-height: math.div(18, 14);
      }
    }

    [data-testid='stHeaderActionElements'] {
      svg {
        stroke: $text-primary;
        &:hover {
          stroke: currentColor;
        }
      }
    }

    .stCode {
      &,
      * {
        @include font-family(mono);
      }
      pre {
        background-color: $layer-02;
        padding-inline-end: rem(48px);
        border-radius: 0;
        color: inherit;
        code {
          @include type-style(code-01);
        }
      }
      button {
        inline-size: rem(32px);
        block-size: rem(32px);
        position: absolute;
        margin: rem(8px);
        color: $text-primary;
        &:hover {
          background-color: $layer-hover-02;
        }
      }
    }

    .stMetric > * {
      color: inherit;
    }

    .stAlert {
      div[role='alert'] {
        border-radius: 0;
        position: relative;
        color: $text-primary;
      }
      p {
        font-size: rem(14px);
        line-height: math.div(18, 14);
      }
      [data-testid='stAlertContentSuccess'],
      [data-testid='stAlertContentInfo'],
      [data-testid='stAlertContentWarning'],
      [data-testid='stAlertContentError'] {
        &::before {
          content: '';
          position: absolute;
          inset: 0;
          border: solid var(--alert-border);
          border-width: 1px 1px 1px 3px;
          background-color: var(--alert-background);
        }
        > * {
          position: relative;
        }
      }
      [data-testid='stAlertContentSuccess'] {
        --alert-border: #{$support-success};
        --alert-background: #{$notification-background-success};
      }
      [data-testid='stAlertContentInfo'] {
        --alert-border: #{$support-info};
        --alert-background: #{$notification-background-info};
      }
      [data-testid='stAlertContentWarning'] {
        --alert-border: #{$support-warning};
        --alert-background: #{$notification-background-warning};
      }
      [data-testid='stAlertContentError'] {
        --alert-border: #{$support-error};
        --alert-background: #{$notification-background-error};
      }
      [data-testid='stAlertDynamicIcon'] {
        inset-block-start: -1px;
      }
    }

    .stForm {
      border-color: $border-subtle;
    }

    .stButton,
    .stDownloadButton,
    .stFormSubmitButton {
      button {
        position: relative;
        padding-block: rem(14px);
        padding-inline: rem(15px) rem(63px);
        border: 1px solid transparent;
        border-radius: $spacing-03;
        transition:
          color $duration-fast-02,
          background-color $duration-fast-02;
        p {
          font-size: rem(14px);
          line-height: math.div(18, 14);
          letter-spacing: rem(0.16px);
        }
        > span[color='inherit'] {
          position: absolute;
          inset-block-start: 50%;
          inset-inline-end: rem(15px);
          margin: 0;
          transform: translateY(-50%);
        }
        [data-testid='stIconEmoji'] {
          margin: 0;
        }
      }
      button[kind='primary'],
      button[kind='primaryFormSubmit'] {
        background-color: $button-primary;
        &,
        &:hover,
        &:active {
          color: $text-on-color;
        }
        &:hover {
          background-color: $button-primary-hover;
        }
        &:active {
          background-color: $button-primary-active;
        }
      }
      button[kind='secondary'],
      button[kind='secondaryFormSubmit'] {
        background-color: $button-secondary;
        &,
        &:hover,
        &:active {
          color: $button-secondary-color;
        }
        &:hover {
          background-color: $button-secondary-hover;
        }
        &:active {
          background-color: $button-secondary-active;
        }
      }
      button:disabled {
        &,
        &:hover,
        &:active {
          color: $text-on-color-disabled;
          background-color: $button-disabled;
        }
      }
    }

    [data-testid='stWidgetLabel'] {
      min-block-size: 0;
      margin-block-end: $spacing-03;
      color: inherit;
      &,
      p {
        font-size: rem(14px);
        line-height: math.div(18, 14);
        font-weight: 600;
      }
    }

    .stFileUploader {
      section {
        background-color: transparent;
        border: 1px dashed $border-strong-01;
        &:hover,
        &:active,
        &:focus {
          @include focus-outline('outline');
          border-color: transparent;
          box-shadow: none;
        }
      }
      [data-testid='stBaseButton-secondary'] {
        display: none;
      }
      [data-testid='stFileUploaderDropzoneInstructions'] {
        > span:first-child {
          display: none;
        }
        > div {
          span,
          small {
            font-size: rem(14px);
            line-height: math.div(18, 14);
          }
          span {
            font-weight: 600;
            color: $text-primary;
            margin-block-end: $spacing-03;
          }
          small {
            color: $text-secondary;
          }
        }
      }
    }

    .stFileUploaderFile {
      padding: rem(15px) $spacing-05;
      background-color: $layer-02;
      border-radius: $spacing-03;
      margin-inline: -$spacing-05;
      > div:first-child {
        display: none;
      }
      [data-testid='stFileUploaderDeleteBtn'] {
        margin-block: -$spacing-03;
        margin-inline-end: -$spacing-03;
        button {
          inline-size: rem(32px);
          block-size: rem(32px);
          min-block-size: 0;
          &:hover,
          &:active,
          &:focus {
            color: inherit;
          }
        }
      }
    }

    .stFileUploaderFileData {
      padding-inline-start: 0;
      font-size: rem(14px);
      line-height: math.div(18, 14);
      letter-spacing: rem(0.16px);
    }

    .stFileUploaderFileName {
      margin-block-end: 0;
    }

    [data-testid='StyledFullScreenButton'] {
      inline-size: rem(32px);
      block-size: rem(32px);
      inset-block-start: 0;
      inset-inline-end: rem(32px);
      &[title='Exit fullscreen'] {
        inset-block-start: rem(12px);
        inset-inline-end: rem(12px);
      }
    }

    [data-testid='stVegaLiteChart'] {
      summary {
        inline-size: rem(32px);
        block-size: rem(32px);
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }

    .stTable {
      @include type-style(body-01);
      inline-size: 100%;
      border-collapse: collapse;
      &,
      th,
      td {
        border: 1px solid $border-subtle-00;
      }
      th,
      td {
        padding: $spacing-03 $spacing-04;
        text-align: start;
      }
      th {
        font-weight: 600;
      }
    }

    .stExpander {
      details {
        border-color: $border-subtle-00;
        &:hover,
        &:focus {
          @include focus-outline('outline');
          border-color: transparent;
        }
      }
      summary {
        padding-block: rem(13px);
        &:hover {
          color: inherit;
          svg {
            fill: currentColor;
          }
        }
        &:focus-visible {
          outline: none;
        }
      }
    }

    .stDataFrame {
      inline-size: 100%;
    }

    .stRadio {
      [role='radiogroup'] {
        gap: $spacing-03;
      }
    }

    [data-baseweb='radio'] > div:first-child,
    [data-baseweb='checkbox'] > span:first-child {
      inline-size: rem(18px);
      block-size: rem(18px);
      margin: 0;
      border: 1px solid $border-subtle;
      background-color: transparent;
      transition: none;
    }

    [data-baseweb='radio'],
    [data-baseweb='checkbox'] {
      > div:last-child {
        color: inherit;
      }

      &,
      p {
        font-size: rem(14px);
        line-height: math.div(18, 14);
        letter-spacing: rem(0.16px);
        font-weight: 400;
      }

      [data-testid='stWidgetLabel'] {
        margin-block-end: 0;
      }
    }

    [data-baseweb='radio']:has(input:checked) > div:first-child,
    [data-baseweb='checkbox']:has(input:checked) > span:first-child {
      border-color: $icon-primary;
    }

    [data-baseweb='radio']:has(input:focus-visible),
    [data-baseweb='checkbox']:has(input:focus-visible) {
      background-color: transparent;
    }

    [data-baseweb='radio']:has(input:focus-visible) > div:first-child,
    [data-baseweb='checkbox']:has(input:focus-visible) > span:first-child {
      @include focus();
    }

    [data-baseweb='radio'] {
      > div:first-child > div {
        inline-size: rem(8px);
        block-size: rem(8px);
        display: none;
        background-color: $icon-primary;
        transition: none;
      }

      &:has(input:checked) > div:first-child > div {
        display: block;
      }
    }

    [data-baseweb='checkbox'] > span:first-child {
      border-radius: $spacing-01;
      background: none;
      position: relative;
      inset-block-start: 0;
      inset-inline-start: 0;
      &::after {
        content: '';
        position: absolute;
        border-block-end: 1.5px solid $icon-inverse;
        border-inline-start: 1.5px solid $icon-inverse;
        inline-size: rem(9px);
        block-size: rem(5px);
        inset-block-start: rem(0.5px);
        inset-inline-start: rem(4px);
        transform: scale(1) rotate(-45deg);
        transform-origin: bottom right;
      }
    }

    [data-baseweb='checkbox']:has(input:checked) > span:first-child {
      background-color: $icon-primary;
    }

    [data-baseweb='base-input'] > input,
    [data-baseweb='base-input'] > textarea,
    [data-baseweb='select'] > div {
      border: 1px solid $border-subtle;
      background-color: transparent;
      color: $text-primary;
      font-size: rem(14px);
      line-height: math.div(18, 14);
      letter-spacing: rem(0.16px);
      block-size: auto;
      &:focus-within {
        @include focus-outline('outline');
      }
    }

    [data-baseweb='base-input'] > input,
    [data-baseweb='base-input'] > textarea {
      border-radius: $spacing-03;
      padding: rem(14px) $spacing-05;
      min-block-size: rem(48px);
      &::placeholder {
        color: $text-placeholder;
      }
    }

    [data-baseweb='input'],
    [data-baseweb='textarea'],
    [data-baseweb='base-input'] {
      background-color: transparent;
      border: 0;
      border-radius: 0;
      block-size: auto;
    }

    [data-baseweb='select'] > div {
      > div {
        padding: rem(10px) rem(16px);
        block-size: rem(46px);
        + div {
          padding-inline-start: 0;
          padding-inline-end: $spacing-03;
          margin-inline-start: -$spacing-02;
        }
        > div + div:last-child {
          color: $text-placeholder;
        }
        [value] {
          block-size: auto;
          margin-inline-start: 0;
        }
        input {
          font-size: inherit;
          line-height: inherit;
          letter-spacing: inherit;
          color: inherit;
        }
      }
    }

    [data-testid='stNumberInputContainer'] {
      block-size: auto;
      border: 0;
      [data-baseweb='base-input'] > input {
        border-start-end-radius: 0;
        border-end-end-radius: 0;
        border-inline-end: 0;
      }
    }

    [data-testid='stNumberInputStepDown'],
    [data-testid='stNumberInputStepUp'] {
      background-color: $border-subtle;
      color: inherit;
      padding-inline: $spacing-03;
      inline-size: rem(40px);
      &:focus {
        box-shadow: none;
        color: inherit;
      }
      &:hover:not(:disabled) {
        background-color: $button-primary;
        color: $text-on-color;
      }
      &:disabled {
        color: $text-on-color-disabled;
      }
      svg {
        color: inherit;
      }
    }

    [data-testid='InputInstructions'] {
      color: $text-secondary;
      inset-inline-end: $spacing-03;
      inset-block-end: $spacing-02;
    }
  }

  [data-baseweb='popover'] {
    box-shadow: $box-shadow;
    > div {
      background-color: $layer;
      color: $text-primary;
    }
  }

  [data-baseweb='menu'],
  [data-testid='stSelectboxVirtualDropdown'],
  [data-testid='stSelectboxVirtualDropdownEmpty'] {
    box-shadow: none;
    font-size: rem(14px);
    line-height: math.div(18, 14);
    letter-spacing: rem(0.16px);
    background-color: $layer;
    li {
      font-size: inherit;
      line-height: inherit;
      letter-spacing: inherit;
      color: $text-primary;
      background-color: $layer;
      &[aria-selected='true'],
      &:hover {
        background-color: $layer-hover;
      }
    }
  }

  [data-baseweb='tag'] {
    background-color: $tag-background-blue;
    color: $tag-color-blue;
    border-radius: rem(9px);
    padding-block: 0;
    padding-inline: $spacing-03;
    font-size: rem(12px);
    line-height: math.div(18, 12);
    letter-spacing: rem(0.16px);
    block-size: auto;
    margin-block: $spacing-02;
    margin-inline-end: $spacing-02;
    &:focus {
      @include focus();
    }
    span {
      font-size: inherit;
      line-height: inherit;
      letter-spacing: inherit;
    }
  }
}

#loading {
  & {
    position: fixed;
    inset: 0;
    z-index: 9998;

    opacity: 0;
    pointer-events: none;

    transition-delay: 0s;
    transition-duration: 0.2s;
    transition-property: opacity, pointer-events;
    transition-behavior: allow-discrete;
  }

  #root:has(.stApp[data-test-script-state="running"]) ~ & {
    opacity: 1;
    pointer-events: all;

    transition-delay: 0.5s;
  }

  .backdrop {
    position: absolute;
    inset: 0.5rem;
    border-radius: 0.5rem;
    z-index: 9998;
    background: var(--cds-overlay);
  }

  .spinner {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: 9999;
  }
}
